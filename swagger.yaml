---
openapi: 3.0.0
info:
  title: AtCreate API
  version: 1.1.0
servers:
  - url: https://atcreate-api.azurewebsites.net/api/
components:
  securitySchemes:
    noAuth:
      type: http
      scheme: noauth
    bearerAuth:
      type: http
      scheme: bearer
security:
  - bearerAuth: []
paths:
  /login:
    post:
      tags: [ Authentication ]
      summary: Login
      description: This endpoint allows users to authenticate to the API. JWT authorization tokens returned are used for accessing protected resources.  This endpoint must be called before calling protected endpoints.  The JWT authorization token returned must be used when calling protected API endpoints.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: test@email.com
                password: some-secure-password
      security:
        - noAuth: []
      responses:
        "200":
          description: Successful response
  /devices:
    get:
      tags: [ Protected ]
      summary: Get devices
      description: Retrieves all RIC devices associated with the authenticated account.  This endpoint will return identifiers for each RIC called `sigfoxId`.  This is to be used with other endpoints to retrieve data for specific RIC devices.
      parameters:
        - name: formatted
          description: This formats response in a different style.
          required: false
          in: query
          schema:
            type: boolean
          example: "true"
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /device-configs:
    get:
      tags: [ Protected ]
      summary: Get device configurations
      description: Retrieves configuration information for RIC devices.  RIC are typically configured in the field using the Ricster iOS App.  RIC configuration information is transmitted to our backend on RIC reboot.  This endpoint retrieves the RIC's configuration.
      parameters:
        - name: sigfoxId
          description: RIC's `sigfoxId`.  These can be obtained from `GET /devices` endpoint.
          required: true
          in: query
          schema:
            type: string
          example: 7F64BE
        - name: all
          description: This will return all current and past RIC configurations.
          required: false
          in: query
          schema:
            type: boolean
          example: "true"
        - name: formatted
          description: This formats response in a different style.
          required: false
          in: query
          schema:
            type: boolean
          example: "true"
      responses:
        "200":
          description: Successful response
        "401":
          description: "Unauthorized: Invalid or missing JWT token."

  /sensor-depth:
    get:
      tags: [ Protected ]
      summary: Get sensor position (or depth)
      description: Retrieve RIC's sensor depth.  RIC's can have up to 6 sensors.  `sensorId` is used to specify which sensor depth is being retrieved.
      parameters:
        - name: sigfoxId
          description: RIC's `sigfoxId`.  These can be obtained from `GET /devices` endpoint.
          required: true
          in: query
          schema:
            type: string
          example: 7F64BE
        - name: sensorId
          description: RIC's Sensor Id.  RICs support 6 sensors.  Valid values are 1 to 6.
          in: query
          schema:
            type: integer
          example: "1"
      responses:
        "200":
          description: Successful response
        "401":
          description: "Unauthorized: Invalid or missing JWT token."

  /sensor-readings:
    get:
      tags: [ Protected ]
      summary: Get sensor readings
      description: Retrieves sensor data readings.  Data is returned in JSON structure for all sensors (including temperature and battery readings).  The data is returned in key/value pairs, where key is the unix timestamp and value is the sensor reading.  Reading interval depends on RIC sampling rate configuration (typically 15 min, but can vary depending between 1 and 120 on the application).  In order to get a faster response, it is recommended to keep the `limit` to 1000 or lower.  The best way to retrieve data is in batches calling this endpoint multiple times.  Use the `fromTimestamp` of the last record obtained to retrieve the next batch of records.
      parameters:
        - name: sigfoxId
          description: RIC's `sigfoxId`.  These can be obtained from `GET /devices` endpoint.
          required: true
          in: query
          schema:
            type: string
          example: 7F6BC2
        - name: limit
          description: Limit of how many data points to return.  1000 is ideal for fast response.  If requesting more than 1000, response times can be long.
          in: query
          schema:
            type: integer
          example: "1000"
        - name: fromTimestamp
          description: The timestamp to get data points from.  When grabbing many data points, this is used in combination with `limit` to get the next batch of data points.
          in: query
          schema:
            type: integer
          example: "1647035926"
      responses:
        "200":
          description: Successful response
        "401":
          description: "Unauthorized: Invalid or missing JWT token."

  /healthcheck:
    get:
      tags: [ Utility ]
      summary: Healthcheck
      description: Used to determine if the API is healthy and operational.  Useful for checking connectivity.
      security:
        - noAuth: []
      responses:
        "200":
          description: Successful response